@import url('https://fonts.googleapis.com/css?family=Muli&display=swap');
/*
  :root CSS 伪类匹配文档树的根元素
   相当于<html> 优先级更高 可以用来声明全局css变量
*/
:root{
  --line-border-fill: #3498db;
  --line-border-empty: #e0e0e0;
}

*{box-sizing: border-box;}

body {
  background-color: #f6f7fb;
  font-family: 'Muli', sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  overflow: hidden;
  margin: 0;
}

.container {
  text-align: center;
}

.progress-container {
  display: flex;
  justify-content: space-between;
  max-width: 100%;
  width:350px;
  margin-bottom: 30px;
  position: relative;
}

/* ::before 创建一个伪元素，其将成为匹配选中的元素的第一个子元素。
  常通过 content 属性来为一个元素添加修饰性的内容,
  默认是行内元素 ; 这里用作灰色进度
  
*/
.progress-container::before {
  content: '';
  background-color: var(--line-border-empty);
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);  /*移动50% 和top相互辉映*/
  height: 4px;
  width: 100%;
  z-index: -1;
}

.progress {
  background-color: var(--line-border-fill);
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  height: 4px;
  width: 0%;
  z-index: -1;
  transition: 0.4s ease;
}

.circle {
  background-color: #fff;
  color: #999;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 3px solid var(--line-border-empty);
  transition: 0.4s ease;
}
.circle.active {
  border-color: var(--line-border-fill);
}

.btn{
  color:#fff;
  background-color:  var(--line-border-fill);
  border-radius: 6px;
  border: 0;
  padding: 8px 30px;
  margin: 5px;
  font-size: 14px;
  cursor: pointer;
  font-family: inherit;
}

.btn:active {
  transform: scale(0.98); /*缩放*/
}

.btn:focus{
  outline:0;
}

.btn:disabled{
  background-color: var(--line-border-empty);
  cursor: not-allowed;
}


